name: Full Stack CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/**"

jobs:
  # ========================
  # Backend Build
  # ========================
  backend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: ./backend/package-lock.json

      - name: Install dependencies (including dev)
        run: npm ci

      - name: TypeScript checks & Not ESLint checks
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Run npm audit
        run: npm audit --audit-level=high

      - name: Build backend
        run: npm run build

      - name: âœ… Backend build completed
        run: echo "ðŸŽ‰ Backend build completed successfully!"

  # ========================
  # Frontend Build
  # ========================
  frontend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install dependencies (including dev)
        run: npm ci

      - name: ESLint check
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Run npm audit
        run: npm audit --audit-level=high

      - name: Build frontend
        run: npm run build

      - name: âœ… Frontend build completed
        run: echo "ðŸŽ‰ Frontend build completed successfully!"

  # ========================
  # Optional: Docker Build & Push (uncomment if using Docker registry)
  # ========================
  # docker-build-push:
  #   runs-on: ubuntu-latest
  #   needs: [backend-build, frontend-build]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Build and tag Docker images
  #       run: |
  #         docker build -t myapp-backend ./backend
  #         docker build -t myapp-frontend ./frontend
  #
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #
  #     - name: Push Docker images
  #       run: |
  #         docker push myapp-backend
  #         docker push myapp-frontend
