services:
  redis:
    image: redis:7-alpine
    container_name: redis-dev
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - app-network
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - redis-data:/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:15-alpine
    container_name: postgres-dev
    restart: unless-stopped
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - app-network
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
      # Performance tuning for development
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.utf8"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-dev-db.sh:/docker-entrypoint-initdb.d/01-init-dev-db.sh:ro
      - ./scripts/backup:/backup
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Shared memory for PostgreSQL (prevents crashes with large queries)
    shm_size: 128mb

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge
    name: app-network
