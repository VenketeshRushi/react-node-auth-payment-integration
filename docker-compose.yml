services:
  # ==========================
  # Redis
  # ==========================
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379" # Host:Container -> Access Redis on localhost:${REDIS_PORT}
    networks:
      - app-network
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - redis-data:/data

  # ==========================
  # RedisInsight UI
  # ==========================
  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis-insight
    restart: unless-stopped
    ports:
      - "5540:5540" # Access at http://localhost:5540
    networks:
      - app-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5540 || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 20s
    volumes:
      - redisinsight-data:/data

  # ==========================
  # PostgreSQL
  # ==========================
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    ports:
      - "${DB_PORT}:5432" # Host:Container -> Access PostgreSQL on localhost:${DB_PORT}
    networks:
      - app-network
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # ==========================
  # pgAdmin
  # ==========================
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "5050:80" # Access pgAdmin at http://localhost:5050
    networks:
      - app-network
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  # ==========================
  # Backend API
  # ==========================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    env_file: ./backend/.env.production # Backend-specific env
    ports:
      - "${PORT}:5000" # Access backend at http://localhost:${PORT}
    networks:
      - app-network
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ==========================
  # Frontend Web App
  # ==========================
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: web
    env_file: ./frontend/.env.production # Frontend-specific env
    ports:
      - "5173:80" # Access frontend at http://localhost:5173
    networks:
      - app-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5

# ==========================
# Volumes
# ==========================
volumes:
  redis-data:
  redisinsight-data:
  postgres-data:
  pgadmin-data:

# ==========================
# Networks
# ==========================
networks:
  app-network:
    driver: bridge
