version: "3.9"

services:
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis-insight
    restart: unless-stopped
    ports:
      - "5540:5540"
    volumes:
      - redisinsight-data:/data
    networks:
      - app-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5540 || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 20s

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "5000:5000"
    env_file: ./backend/.env.production
    networks:
      - app-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  web:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: web
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge
